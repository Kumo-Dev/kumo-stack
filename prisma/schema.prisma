generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  name          String?
  role          UserRole  @default(USER)
  accounts      Account[]
  Anime         Anime[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Anime {
  id          String    @id @unique
  title       String
  description String
  rating      Int
  likes       Int
  userId      String?
  User        User?     @relation(fields: [userId], references: [id])
  Episode     Episode[]
}

model Episode {
  id      String  @id @unique
  title   String
  rating  Int
  likes   Int
  animeId String?
  Anime   Anime?  @relation(fields: [animeId], references: [id])
}

enum UserRole {
  OWNER
  ADMIN
  USER
}
